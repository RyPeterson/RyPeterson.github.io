{"version":3,"sources":["components/Navi.tsx","models/User.ts","components/Page.tsx","models/AnimalSpecies.ts","api/internal/ShowcaseApi.ts","api/Api.ts","pages/index.tsx","components/PaginationButtons.tsx","utils/dateFormat.ts","components/AnimalList.tsx","pages/animals.tsx","pages/login.tsx","pages/register.tsx","components/LoadingSpinner.tsx","components/AnimalComponent.tsx","pages/animal.tsx","pages/profile.tsx","pages/logout.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/animals sync /^/.//.*/.svg$","assets/images/animals/chicken.svg","assets/images/animals/cow.svg","assets/images/animals/duck.svg","assets/images/animals/goat.svg","assets/images/animals/goose.svg","assets/images/animals/horse.svg","assets/images/animals/llama.svg","assets/images/animals/pig.svg","assets/images/animals/rabbit.svg","assets/images/animals/turkey.svg"],"names":["Navi","props","user","rest","Object","objectWithoutProperties","react_default","a","createElement","Navbar","assign","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Row","lastInitial","lastName","charAt","concat","firstName","length","formatName","Page","Col","title","document","components_Navi","children","imageUrl","name","require","AnimalSpecies","defaultImage","ShowcaseApi","getAnimals","limit","animals","_loop","i","gender","Error","species","push","dateOfBirth","Date","dateOfDeath","undefined","animalGender","Promise","resolve","getAnimal","_getAnimal","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","this","sent","abrupt","find","animal","stop","_x","apply","arguments","getUser","email","fetchUser","Api","Index","components_Page","generateClassName","currentPage","pageNumber","numberPaddingLeft","Math","floor","paginationNumbersVisible","numberPaddingRight","console","log","PageItem","activePage","onPageSelected","pageNumbers","Pagination","Item","active","onClick","PaginationButtons","availablePages","Array","map","e","index","visiblePages","slice","min","getCurrentlyVisibleNumbers","isOffFirstNumbers","isOnLastNumbers","needsEllipsis","size","Fragment","First","Prev","max","Ellipsis","num","PaginationButtons_PageItem","key","Next","Last","formatDate","date","getMonth","getDay","getFullYear","AnimalDateDisplay","_ref","label","renderEmpty","ListGroupItem","AnimalCard","_ref2","onAnimalDetailsClicked","Card","empty","aria-hidden","Img","variant","src","Body","Title","ListGroup","AnimalList_AnimalDateDisplay","Button","AnimalList","remainder","animalFacades","objectSpread","count","generateEmptyAnimals","_useState","useState","_useState2","slicedToArray","page","setPage","animalPages","chunk","animalsPerRow","currentPageAnimals","components_PaginationButtons","pageNum","animalRow","idx","AnimalList_AnimalCard","numAnimals","generateTestAnimals","_callee2","_context2","withRouter","setAnimals","useEffect","_load","t0","t1","load","components_AnimalList","animalId","history","Login","Register","LoadingSpinner","message","Spinner","animation","role","AnimalComponent","onEditClicked","onNavigateBack","Image","rounded","match","params","setAnimal","_useState3","_useState4","loading","setLoading","Number","parseInt","components_LoadingSpinner","components_AnimalComponent","Profile","Logout","App","react_router_dom","react_router","path","exact","component","Animals","Animal","process","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./chicken.svg","./cow.svg","./duck.svg","./goat.svg","./goose.svg","./horse.svg","./llama.svg","./pig.svg","./rabbit.svg","./turkey.svg","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","module","exports","p"],"mappings":"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","file":"static/js/main.e192f5cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav, Row } from \"react-bootstrap\";\nimport { User, formatName } from \"../models/User\";\nimport \"../css/components/navi.css\";\n\ninterface NaviProps {\n  user: User | null;\n}\nconst Navi: React.FC<NaviProps> = props => {\n  const { user, ...rest } = props;\n  return (\n    <Navbar bg=\"dark\" expand=\"md\" className=\"navi\" {...rest}>\n      <Navbar.Brand href=\"/\">Yamhillia</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"yamhillia-navbar-collapse\">\n        <Nav.Link href=\"/\">Home</Nav.Link>\n        <Nav.Link href=\"/animals\">Animals</Nav.Link>\n        {user && (\n          <Row className=\"right-page-actions\">\n            <Nav.Link className=\"user-welcome\" href=\"/profile\">\n              Welcome {formatName(user)}\n            </Nav.Link>\n            <Nav.Link href=\"/logout\">Logout</Nav.Link>\n          </Row>\n        )}\n        {!user && (\n          <Row className=\"right-page-actions\">\n            <Nav.Link href=\"/login\">Login</Nav.Link>\n            <Nav.Link href=\"/register\">Register</Nav.Link>\n          </Row>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navi;\n","export interface User {\n  email: string;\n  firstName: string;\n  lastName?: string;\n}\n\nexport function formatName(user: User): string {\n  const lastInitial = user.lastName ? user.lastName.charAt(0) : \"\";\n  return `${user.firstName}${lastInitial.length ? ` ${lastInitial}.` : \"\"}`;\n}\n","import React, { FC } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport Navi from \"./Navi\";\nimport { User } from \"../models/User\";\nimport \"../css/components/page.css\";\n\nexport interface PageProps {\n  title?: string;\n  user: User | null;\n}\n\nfunction changeTitleWithHax(title?: string) {\n  if (title) {\n    document.title = title;\n  }\n}\n\nconst Page: FC<PageProps> = props => (\n  <Col className=\"page\">\n    {changeTitleWithHax(props.title)}\n    <Navi user={props.user} />\n    {props.children}\n  </Col>\n);\n\nexport type PageComponent<P = {}> = FC<{ path: string } & P>;\n\nexport default Page;\n","export interface Species {\n  name: string;\n  defaultImage: string;\n}\n\nconst imageUrl = (name: string) =>\n  require(`../assets/images/animals/${name}.svg`);\n\nconst AnimalSpecies: Species[] = [\n  {\n    name: \"Chicken\",\n    defaultImage: imageUrl(\"chicken\")\n  },\n  {\n    name: \"Cow\",\n    defaultImage: imageUrl(\"cow\")\n  },\n  {\n    name: \"Duck\",\n    defaultImage: imageUrl(\"duck\")\n  },\n  {\n    name: \"Goat\",\n    defaultImage: imageUrl(\"goat\")\n  },\n  {\n    name: \"Goose\",\n    defaultImage: imageUrl(\"goose\")\n  },\n  {\n    name: \"Horse\",\n    defaultImage: imageUrl(\"horse\")\n  },\n  {\n    name: \"Llama\",\n    defaultImage: imageUrl(\"llama\")\n  },\n  {\n    name: \"Pig\",\n    defaultImage: imageUrl(\"pig\")\n  },\n  {\n    name: \"Rabbit\",\n    defaultImage: imageUrl(\"rabbit\")\n  },\n  {\n    name: \"Turkey\",\n    defaultImage: imageUrl(\"turkey\")\n  }\n];\n\nexport default AnimalSpecies;\n\nexport function speciesFromString(str: string): Species {\n  const result = AnimalSpecies.find(\n    species => species.name.toLowerCase() === str.toLowerCase()\n  );\n  if (!result) {\n    throw new Error(`${str} is not a recognized species.`);\n  }\n  return result;\n}\n","import { ApiInterface } from \"../Api\";\nimport { Animal } from \"../../models/Animal\";\nimport AnimalSpecies from \"../../models/AnimalSpecies\";\nimport { User } from \"../../models/User\";\n\n/**\n * Implementation of Api to be used for development without a server\n */\nconst ShowcaseApi: ApiInterface = {\n  getAnimals(limit?: number): Promise<Animal[]> {\n    const animals: Animal[] = [];\n    for (let i = 0; i < (limit ? limit : 30); i++) {\n      const gender = (() => {\n        switch (i % 3) {\n          case 0:\n            return \"Male\";\n          case 1:\n            return \"Female\";\n          case 2:\n            return \"Other\";\n          default:\n            throw new Error(\"This shall not happen\");\n        }\n      })();\n      const species = AnimalSpecies[i % AnimalSpecies.length];\n      animals.push({\n        name: `Animal ${species.name} ${i}`,\n        dateOfBirth: new Date(),\n        dateOfDeath: i % 4 === 0 ? new Date() : undefined,\n        species,\n        animalGender: gender,\n        id: i + 1\n      });\n    }\n    return Promise.resolve(animals);\n  },\n\n  async getAnimal(id: number): Promise<Animal | null> {\n    const animals = await this.getAnimals(30);\n    return animals.find(animal => animal.id === id) || null;\n  },\n\n  getUser(): User | null {\n    return {\n      email: \"testuser@test.com\",\n      firstName: \"Test\",\n      lastName: \"User\"\n    };\n  },\n\n  fetchUser(): Promise<User | null> {\n    return Promise.resolve(this.getUser());\n  }\n};\n\nexport default ShowcaseApi;\n","import { Animal } from \"../models/Animal\";\nimport ShowcaseApi from \"./internal/ShowcaseApi\";\nimport { User } from \"../models/User\";\nimport AxiosApi from \"./internal/AxiosApi\";\n\nexport interface ApiInterface {\n  getAnimals: (limit?: number) => Promise<Animal[]>;\n  getAnimal: (id: number) => Promise<Animal | null>;\n  /**\n   * Get the user in the context of the session\n   */\n  getUser: () => User | null;\n  /**\n   * Get the user from the server\n   */\n  fetchUser: () => Promise<User | null>;\n}\n\nexport default function Api() {\n  return ShowcaseApi;\n}\n","import React from \"react\";\nimport Page, { PageComponent } from \"../components/Page\";\nimport Api from \"../api/Api\";\n\nconst Index: PageComponent = props => (\n  <Page {...props} user={Api().getUser()}>\n    TODO this is the index\n  </Page>\n);\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nexport interface PaginationProps {\n  availablePages: number;\n  currentPage: number;\n  onPageSelected: (page: number) => any;\n}\n\nfunction generateClassName(currentPage: number, pageNumber: number): string {\n  if (pageNumber === currentPage - 1) {\n    return \"nav-item-previous\";\n  }\n  if (pageNumber === currentPage + 1) {\n    return \"nav-item-next\";\n  }\n  return \"\";\n}\n\nconst paginationNumbersVisible = 5;\nconst numberPaddingLeft = Math.floor(paginationNumbersVisible / 2);\nconst numberPaddingRight =\n  numberPaddingLeft % 2 !== 0 ? numberPaddingLeft : numberPaddingLeft + 1;\nconsole.log(paginationNumbersVisible, numberPaddingLeft, numberPaddingRight);\n\nconst getCurrentlyVisibleNumbers = (\n  currentPage: number,\n  pageNumbers: number[]\n): number[] => {\n  // https://i.redd.it/mwljue1r4sk11.jpg\n  if (currentPage >= pageNumbers.length - paginationNumbersVisible) {\n    return pageNumbers.slice(\n      Math.min(\n        currentPage - numberPaddingRight,\n        pageNumbers.length - paginationNumbersVisible\n      ),\n      Math.min(currentPage + numberPaddingLeft, pageNumbers.length)\n    );\n  }\n  if (currentPage <= numberPaddingRight) {\n    return pageNumbers.slice(0, paginationNumbersVisible);\n  }\n  return pageNumbers.slice(\n    currentPage - numberPaddingRight,\n    Math.min(currentPage + numberPaddingLeft, pageNumbers.length)\n  );\n};\n\ninterface PageItemProps {\n  activePage: number;\n  pageNumber: number;\n  pageNumbers: number[];\n  onPageSelected: (page: number) => any;\n}\nconst PageItem: React.FC<PageItemProps> = props => {\n  const {\n    activePage,\n    pageNumber,\n    pageNumbers,\n    onPageSelected,\n    ...rest\n  } = props;\n  return (\n    <Pagination.Item\n      active={pageNumber === activePage}\n      onClick={() => onPageSelected(pageNumber)}\n      className={generateClassName(activePage, pageNumber)}\n      {...rest}\n    >\n      {pageNumber}\n    </Pagination.Item>\n  );\n};\n\nconst PaginationButtons: React.FC<\n  PaginationProps & { className: string }\n> = props => {\n  const { availablePages, onPageSelected, currentPage, ...rest } = props;\n  const pageNumbers = Array.apply(null, Array(availablePages)).map(\n    (e, index) => index + 1\n  );\n  const visiblePages = getCurrentlyVisibleNumbers(currentPage, pageNumbers);\n\n  const jumpForward = () => {\n    onPageSelected(\n      Math.min(availablePages, currentPage + paginationNumbersVisible)\n    );\n  };\n\n  const jumpBackward = () => {\n    onPageSelected(Math.max(0, currentPage - paginationNumbersVisible));\n  };\n\n  const isOffFirstNumbers = currentPage - paginationNumbersVisible + 1 >= 0;\n  const isOnLastNumbers =\n    currentPage - numberPaddingRight >=\n    pageNumbers.length - paginationNumbersVisible;\n  const needsEllipsis =\n    visiblePages.length < pageNumbers.length && !isOnLastNumbers;\n\n  return (\n    <Pagination size=\"lg\" {...rest}>\n      {availablePages > 1 && (\n        <React.Fragment>\n          <Pagination.First onClick={() => onPageSelected(1)} />\n          <Pagination.Prev\n            onClick={() => onPageSelected(Math.max(1, currentPage - 1))}\n          />\n          {isOffFirstNumbers && <Pagination.Ellipsis onClick={jumpBackward} />}\n          {visiblePages.map(num => (\n            <PageItem\n              key={`page_${num}`}\n              activePage={currentPage}\n              pageNumber={num}\n              onPageSelected={onPageSelected}\n              pageNumbers={pageNumbers}\n            />\n          ))}\n          {needsEllipsis && <Pagination.Ellipsis onClick={jumpForward} />}\n          <Pagination.Next\n            onClick={() =>\n              onPageSelected(Math.min(availablePages, currentPage + 1))\n            }\n          />\n          <Pagination.Last onClick={() => onPageSelected(availablePages)} />\n        </React.Fragment>\n      )}\n    </Pagination>\n  );\n};\n\nexport default PaginationButtons;\n","export default function formatDate(date: Date): string {\n  return `${date.getMonth() + 1}/${date.getDay()}/${date.getFullYear()}`;\n}\n","import React, { useState } from \"react\";\nimport \"../css/components/animalList.css\";\nimport { Animal } from \"../models/Animal\";\nimport chunk from \"lodash/chunk\";\nimport {\n  Col,\n  Row,\n  Card,\n  ListGroup,\n  Button,\n  ListGroupItem\n} from \"react-bootstrap\";\nimport AnimalSpecies from \"../models/AnimalSpecies\";\nimport PaginationButtons from \"./PaginationButtons\";\nimport formatDate from \"../utils/dateFormat\";\n\nconst animalsPerRow = 4;\nconst animalsPerPage = animalsPerRow * 3;\n\nexport interface AnimalListProperties {\n  animals: Animal[];\n  onAnimalDetailsClicked: (animalId: number) => any;\n}\n\ninterface AnimalCardProperties {\n  animal: AnimalFacade;\n  onAnimalDetailsClicked?: (animalId: number) => any;\n}\n\ninterface AnimalDateDisplayProps {\n  date?: Date;\n  label: string;\n  renderEmpty?: boolean;\n  className: string;\n}\n\ninterface AnimalFacade extends Animal {\n  empty?: boolean;\n}\n\nconst AnimalDateDisplay: React.FC<AnimalDateDisplayProps> = ({\n  date,\n  label,\n  renderEmpty,\n  className\n}) => {\n  if (!date && !renderEmpty) {\n    return null;\n  }\n  if (!date && renderEmpty) {\n    return <ListGroupItem className={`${className} empty`}>none</ListGroupItem>;\n  }\n\n  return (\n    <ListGroupItem className={className}>\n      {label} {date && formatDate(date)}\n    </ListGroupItem>\n  );\n};\n\nconst AnimalCard: React.FC<AnimalCardProperties> = ({\n  animal,\n  onAnimalDetailsClicked\n}) => (\n  <Card\n    className={`animal-card ${animal.empty && \"empty-card\"}`}\n    aria-hidden={animal.empty}\n  >\n    <Card.Img\n      className=\"animal-profile-image\"\n      variant=\"top\"\n      src={animal.species.defaultImage}\n    />\n    <Card.Body>\n      <Card.Title>{animal.name}</Card.Title>\n      <ListGroup>\n        <ListGroupItem>Gender: {animal.animalGender}</ListGroupItem>\n        <AnimalDateDisplay\n          className=\"date-of-birth\"\n          date={animal.dateOfBirth}\n          label=\"Date of Birth:\"\n        />\n        <AnimalDateDisplay\n          className=\"date-of-death\"\n          date={animal.dateOfDeath}\n          label=\"Date of Death:\"\n          renderEmpty\n        />\n      </ListGroup>\n      <Button\n        className=\"animal-details\"\n        onClick={() =>\n          !animal.empty &&\n          onAnimalDetailsClicked &&\n          onAnimalDetailsClicked(animal.id)\n        }\n      >\n        Details\n      </Button>\n    </Card.Body>\n  </Card>\n);\n\nconst generateEmptyAnimals = (count: number): AnimalFacade[] => {\n  const animals: AnimalFacade[] = [];\n  for (let i = 0; i < count; i++) {\n    animals.push({\n      empty: true,\n      name: \"\",\n      animalGender: \"Male\",\n      species: AnimalSpecies[0],\n      id: -(i + 1)\n    });\n  }\n  return animals;\n};\n\nconst AnimalList: React.FC<AnimalListProperties> = props => {\n  const { animals, onAnimalDetailsClicked, ...rest } = props;\n  const remainder = animalsPerRow - (animals.length % animalsPerRow);\n  const animalFacades: AnimalFacade[] = animals\n    .map(animal => ({ ...animal }))\n    .concat(generateEmptyAnimals(remainder));\n\n  const [page, setPage] = useState<number>(1);\n  const animalPages = chunk(animalFacades, animalsPerPage);\n  const currentPageAnimals = chunk(animalPages[page - 1], animalsPerRow);\n\n  const onPageSelected = (pageNum: number) => {\n    setPage(pageNum);\n  };\n\n  return (\n    <Col className=\"animal-list-page\" {...rest}>\n      <PaginationButtons\n        className=\"animal-list-paginator\"\n        availablePages={animalPages.length}\n        onPageSelected={onPageSelected}\n        currentPage={page}\n      />\n      <Col className=\"animal-list\">\n        {currentPageAnimals.map((animalRow, idx) => (\n          <Row key={`animal_row_${idx}`} className=\"animal-card-row\">\n            {animalRow.map(animal => (\n              <AnimalCard\n                animal={animal}\n                key={`animal_${animal.id}`}\n                onAnimalDetailsClicked={onAnimalDetailsClicked}\n              />\n            ))}\n          </Row>\n        ))}\n      </Col>\n    </Col>\n  );\n};\n\nexport default AnimalList;\n","import React, { useState, useEffect } from \"react\";\nimport Page from \"../components/Page\";\nimport { Animal } from \"../models/Animal\";\nimport AnimalList from \"../components/AnimalList\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport Api from \"../api/Api\";\n\nconst numAnimals = 23;\n\nasync function generateTestAnimals(): Promise<Animal[]> {\n  return await Api().getAnimals(numAnimals);\n}\n\nconst Animals: React.FC<RouteComponentProps> = props => {\n  function onAnimalDetailsClicked(animalId: number) {\n    props.history.push(`/animal-details/${animalId}`);\n  }\n\n  const [animals, setAnimals] = useState<Animal[]>([]);\n  const user = Api().getUser();\n\n  useEffect(() => {\n    load();\n    async function load() {\n      setAnimals(await generateTestAnimals());\n    }\n  }, []);\n\n  return (\n    <Page title=\"Yamhillia - Animals\" {...props} user={user}>\n      <AnimalList\n        animals={animals}\n        onAnimalDetailsClicked={onAnimalDetailsClicked}\n      />\n    </Page>\n  );\n};\n\nexport default withRouter(Animals);\n","import React from \"react\";\nimport Page, { PageComponent } from \"../components/Page\";\n\nconst Login: PageComponent = props => {\n  return (\n    <Page {...props} user={null}>\n      TODO all the logins are belong to us\n    </Page>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Page, { PageComponent } from \"../components/Page\";\n\nconst Register: PageComponent = props => {\n  return (\n    <Page {...props} user={null}>\n      TODO all the registrations are belong to us\n    </Page>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Spinner, Col, Row } from \"react-bootstrap\";\nimport \"../css/components/loadingSpinner.css\";\n\nexport interface LoadingSpinnerProps {\n  message?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ message }) => (\n  <Col className=\"loading-spinner\">\n    <Col className=\"contents\">\n      <Col className=\"spinner-and-message\">\n        <Row className=\"spinner-container\">\n          <Spinner\n            className=\"spinner\"\n            animation=\"border\"\n            variant=\"primary\"\n            role=\"status\"\n          >\n            <span className=\"sr-only\">Loading</span>\n          </Spinner>\n        </Row>\n        {message && <Row className=\"loading-spinner-message\">{message}</Row>}\n      </Col>\n    </Col>\n  </Col>\n);\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { Col, Row, Image, Button } from \"react-bootstrap\";\nimport { Animal } from \"../models/Animal\";\nimport \"../css/components/animalComponent.css\";\nimport formatDate from \"../utils/dateFormat\";\n\nexport interface AnimalProps {\n  animal: Animal;\n  onEditClicked: () => any;\n  onNavigateBack: () => any;\n}\n\nconst AnimalComponent: React.FC<AnimalProps> = ({\n  animal,\n  onEditClicked,\n  onNavigateBack\n}) => (\n  <Col className=\"animal-component\">\n    <Row className=\"animal-profile-picture\">\n      <Image\n        className=\"profile-image\"\n        src={animal.species.defaultImage}\n        rounded\n      />\n    </Row>\n    <Col className=\"animal-details\">\n      <Row className=\"animal-name\">{animal.name}</Row>\n      <Row className=\"animal-gender\">\n        <label>Gender:</label>\n        {animal.animalGender}\n      </Row>\n      <Row className=\"animal-date-of-birth\">\n        {animal.dateOfBirth && (\n          <>\n            <label>Date of Birth:</label>\n            {formatDate(animal.dateOfBirth)}\n          </>\n        )}\n      </Row>\n      <Row className=\"animal-date-of-death\">\n        {animal.dateOfDeath && (\n          <>\n            <label>Date of Death</label>\n            {formatDate(animal.dateOfDeath)}\n          </>\n        )}\n      </Row>\n    </Col>\n    <Row className=\"animal-actions\">\n      <Button\n        className=\"edit-information\"\n        variant=\"primary\"\n        onClick={onEditClicked}\n      >\n        Edit Information\n      </Button>\n      <Button className=\"back\" variant=\"secondary\" onClick={onNavigateBack}>\n        Back\n      </Button>\n    </Row>\n  </Col>\n);\n\nexport default AnimalComponent;\n","import React, { useState, useEffect } from \"react\";\nimport Page from \"../components/Page\";\nimport { Animal } from \"../models/Animal\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport Api from \"../api/Api\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport AnimalComponent from \"../components/AnimalComponent\";\n\ninterface AnimalPageParams {\n  animalId?: string;\n}\n\nconst AnimalPage: React.FC<RouteComponentProps<AnimalPageParams>> = props => {\n  const { match, history, ...rest } = props;\n  const { params } = match;\n  const { animalId } = params;\n\n  const [animal, setAnimal] = useState<Animal | null>(null);\n  const [loading, setLoading] = useState(true);\n  const user = Api().getUser();\n\n  useEffect(() => {\n    async function load() {\n      if (!animalId) {\n        history.push(\"/animals\");\n        return;\n      }\n\n      const id = Number.parseInt(animalId);\n      if (!id) {\n        history.push(\"/animals\");\n        return;\n      }\n      setAnimal(await Api().getAnimal(id));\n      setLoading(false);\n    }\n    load();\n  }, []);\n\n  if (!loading && !animal) {\n    return null;\n  }\n\n  if (loading) {\n    return <LoadingSpinner message=\"Loading Animal\" />;\n  }\n\n  return (\n    <Page {...rest} user={user}>\n      <AnimalComponent\n        animal={animal!}\n        onEditClicked={() => {\n          console.log(\"Edit this animal\");\n        }}\n        onNavigateBack={() => {\n          history.push(\"/animals\");\n        }}\n      />\n    </Page>\n  );\n};\n\nexport default withRouter(AnimalPage);\n","import React from \"react\";\nimport Page, { PageComponent } from \"../components/Page\";\nimport Api from \"../api/Api\";\n\nconst Profile: PageComponent = props => {\n  return (\n    <Page {...props} user={Api().getUser()}>\n      TODO: All the profiles are belong to us\n    </Page>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Page, { PageComponent } from \"../components/Page\";\nimport Api from \"../api/Api\";\n\nconst Logout: PageComponent = props => {\n  return (\n    <Page {...props} user={Api().getUser()}>\n      TODO: All the logouts are belong to us\n    </Page>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport \"./css/App.css\";\nimport \"./css/theme.css\";\nimport Index from \"./pages/index\";\nimport Animals from \"./pages/animals\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport Playgound from \"./pages/playgound\";\nimport Animal from \"./pages/animal\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Profile from \"./pages/profile\";\nimport Logout from \"./pages/logout\";\nconst isDev = process.env.NODE_ENV === \"development\";\n\nconst App: React.FC = props => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Index} />\n      <Route path=\"/animals\" exact component={Animals} />\n      <Route path=\"/animal-details/:animalId\" exact component={Animal} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/register\" exact component={Register} />\n      <Route path=\"/profile\" exact component={Profile} />\n      <Route path=\"/logout\" exact component={Logout} />\n      {isDev && <Route path=\"/playgound\" component={Playgound} />}\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./chicken.svg\": 80,\n\t\"./cow.svg\": 81,\n\t\"./duck.svg\": 82,\n\t\"./goat.svg\": 83,\n\t\"./goose.svg\": 84,\n\t\"./horse.svg\": 85,\n\t\"./llama.svg\": 86,\n\t\"./pig.svg\": 87,\n\t\"./rabbit.svg\": 88,\n\t\"./turkey.svg\": 89\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 79;","module.exports = __webpack_public_path__ + \"static/media/chicken.e668faa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cow.4b722d5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/duck.54f3e23d.svg\";","module.exports = __webpack_public_path__ + \"static/media/goat.74585008.svg\";","module.exports = __webpack_public_path__ + \"static/media/goose.fd0fd882.svg\";","module.exports = __webpack_public_path__ + \"static/media/horse.821d41f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/llama.c2e39b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/pig.5f2c34e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.d2a6fafa.svg\";","module.exports = __webpack_public_path__ + \"static/media/turkey.2d9e0cf4.svg\";"],"sourceRoot":""}